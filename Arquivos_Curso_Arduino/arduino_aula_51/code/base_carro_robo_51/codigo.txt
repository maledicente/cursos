#include Servo.h
#include HCSR04.h

#define p1m1 4
#define p2m1 5
#define pvelm1 3
#define p1m2 7
#define p2m2 8
#define pvelm2 6

#define pservo 10

#define p_trigger 11
#define p_echo 12

#define tmp_re 2000
#define tmp_giro 500

Servo servo;
UltraSonicDistanceSensor distanceSensor(p_trigger, p_echo);

int vel,situacao;
int dist_cm,distMinima=40;

class Motor{
public
  int p1,p2,pv;
  Motor(int p1, int p2, int v){
    this-p1=p1;
    this-p2=p2;
    this-pv=v;
    pinMode(p1,OUTPUT);
    pinMode(p2,OUTPUT);
    pinMode(pv,OUTPUT);
    digitalWrite(p1,LOW);
    digitalWrite(p2,LOW);
    analogWrite(pv,0);
  }
  void frente(int v){
    digitalWrite(p1,HIGH);
    digitalWrite(p2,LOW);
    analogWrite(pv,v);
  }
  void tras(int v){
    digitalWrite(p1,LOW);
    digitalWrite(p2,HIGH);
    analogWrite(pv,v);
  }
  void para(){
    digitalWrite(p1,LOW);
    digitalWrite(p2,LOW);
    analogWrite(pv,0);
  }
  void freia(){
    digitalWrite(p1,HIGH);
    digitalWrite(p2,HIGH);
    analogWrite(pv,128);
  }
};

Motor me=new Motor(p1m1,p2m1,pvelm1);
Motor md=new Motor(p1m2,p2m2,pvelm2);

void esquerda(int v){
  md-frente(v);
  me-tras(v);
}
void direita(int v){
  md-tras(v);
  me-frente(v);
}
void frente(int v){
  md-frente(v);
  me-frente(v);
}
void tras(int v){
  md-tras(v);
  me-tras(v);
}
void para(){
  md-para();
  me-para();
}
void escolherLado(){
  int d1,d2;
  servo.write(0);
  delay(500);
  d1=distanceSensor.measureDistanceCm();
  servo.write(180);
  delay(500);
  d2=distanceSensor.measureDistanceCm();
  servo.write(90);
  if(d1d2){
    direita(vel);
    delay(tmp_giro);
  }else{
    esquerda(vel);
    delay(tmp_giro);
  }
}

void setup() {
  vel=200;
  servo.attach(pservo);
  servo.write(90);
}

void loop() {

  dist_cm=distanceSensor.measureDistanceCm();
  if(dist_cm  distMinima){
    para();
    escolherLado();
  }else{
    frente(vel);
  } 
}






